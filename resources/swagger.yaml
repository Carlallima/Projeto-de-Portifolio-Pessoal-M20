openapi: 3.0.0
info:
  title: API de Automação de Contratos
  version: '1.0.0'
  description: >-
    API para extrair, gerenciar e distribuir informações de contratos.
    Simula extração de número de contrato e nome do cliente, associa contratos a consultores e fornece autenticação via JWT.

servers:
  - url: http://localhost:3000

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [GESTOR, CONSULTOR]
    UserRegister:
      type: object
      required: [name, email, password, role]
      properties:
        name: { type: string }
        email: { type: string }
        password: { type: string }
        role:
          type: string
          enum: [GESTOR, CONSULTOR]
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email: { type: string }
        password: { type: string }
    TokenResponse:
      type: object
      properties:
        token:
          type: string
    Contract:
      type: object
      properties:
        id: { type: string }
        contractNumber: { type: string }
        clientName: { type: string }
        consultantId: { type: string }
        createdAt: { type: string, format: date-time }
    ContractRegister:
      type: object
      properties:
        raw:
          type: object
          description: Dados brutos simulados da extração (contractNumber, clientName)

security:
  - bearerAuth: []

paths:
  /auth/login:
    post:
      summary: Login
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Token de autenticação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Requisição mal formada
        '401':
          description: Credenciais inválidas

  /users:
    post:
      summary: Registrar usuário (Consultor ou Gestor)
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: Usuário criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Email já cadastrado ou dados inválidos

    get:
      summary: Listar usuários (apenas Gestor)
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Não autenticado
        '403':
          description: Acesso negado

  /contracts:
    post:
      summary: Registrar contrato (Consultor fornece dados ou simulação)
      tags: [Contracts]
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractRegister'
      responses:
        '201':
          description: Contrato registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        '400':
          description: Requisição inválida
        '401':
          description: Não autenticado

    get:
      summary: Listar contratos (Gestor vê todos, Consultor só os seus)
      tags: [Contracts]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de contratos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
        '401':
          description: Não autenticado

  /:
    get:
      summary: Raiz
      responses:
        '200':
          description: Mensagem de boas-vindas

tags:
  - name: Auth
  - name: Users
  - name: Contracts
